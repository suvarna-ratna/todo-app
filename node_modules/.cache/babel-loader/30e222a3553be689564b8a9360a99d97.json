{"ast":null,"code":"var _jsxFileName = \"/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week2/todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport todoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [todos, setTodos] = useState(todoList);\n  const newTodo = {\n    id: todos.length + 1,\n    title: 'random text'\n  };\n\n  const handleClick = () => {\n    setTodos(todos.concat(newTodo));\n  };\n\n  const handleDelete = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: () => setCheck(!check)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecorationLine: check ? 'line-through' : 'none'\n        },\n        children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 177\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"35B+JBWQSCpjElhggfBfyBPjyVM=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week2/todo-app/src/Todo.js"],"names":["React","useState","todoList","Todo","todos","setTodos","newTodo","id","length","title","handleClick","concat","handleDelete","filter","todo","map","setCheck","check","textDecorationLine"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACC,QAAD,CAAlC;AAEA,QAAMI,OAAO,GAAG;AAACC,IAAAA,EAAE,EAAEH,KAAK,CAACI,MAAN,GAAa,CAAlB;AAAqBC,IAAAA,KAAK,EAAC;AAA3B,GAAhB;;AACA,QAAMC,WAAW,GAAG,MAAK;AACvBL,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAaL,OAAb,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMM,YAAY,GAAIL,EAAD,IAAO;AAC1BF,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAQA,IAAI,CAACP,EAAL,KAAUA,EAA/B,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACG;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEGN,KAAK,CAACW,GAAN,CAAWD,IAAD,iBAAQ;AAAA,8BAAE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC,CAACC,KAAF;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAF,eAA2D;AAAkB,QAAA,KAAK,EAAE;AAACC,UAAAA,kBAAkB,EAAED,KAAK,GAAG,cAAH,GAAoB;AAA9C,SAAzB;AAAA,mBAAiFH,IAAI,CAACL,KAAtF,eAA4F;AAAQ,UAAA,OAAO,EAAE,MAAIG,YAAY,CAACE,IAAI,CAACP,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5F;AAAA,SAASO,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,cAA3D;AAAA,oBAAlB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;GAAMJ,I;;KAAAA,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport todoList from \"./TodoList\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState(todoList)\n  \n  const newTodo = {id: todos.length+1, title:'random text'}\n  const handleClick = () =>{\n    setTodos(todos.concat(newTodo));\n  }\n  const handleDelete = (id) =>{\n    setTodos(todos.filter((todo)=>todo.id!==id));\n  }\n  return (\n    <div>\n       <button onClick={handleClick}>Add Todo</button>\n      {todos.map((todo)=><><input type=\"checkbox\" onClick={() => setCheck(!check)}/><li key={todo.id} style={{textDecorationLine: check ? 'line-through' : 'none'}}>{todo.title}<button onClick={()=>handleDelete(todo.id)}>Delete</button></li></>)}\n    </div>\n  );\n}\n\nexport default Todo;\n\n\n"]},"metadata":{},"sourceType":"module"}