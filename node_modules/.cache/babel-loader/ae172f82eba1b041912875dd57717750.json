{"ast":null,"code":"var _jsxFileName = \"/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week3/todo-app/src/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getNextId, getTodos } from \"./TodosHelper\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = function () {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [textValue, changeTextValue] = useState(\"\");\n  const [dateValue, changeDateValue] = useState(\"\");\n  const [editMode, updateEditMode] = useState(-1);\n  const [newDescription, changeDescription] = useState(\"\");\n  useEffect(() => {\n    setList([]);\n    getTodos().then(data => setList(data));\n  }, []);\n  const nextId = getNextId(list);\n  let newTodo = {\n    id: nextId,\n    description: textValue,\n    deadline: dateValue\n  };\n\n  function addItem() {\n    setList(list.concat(newTodo));\n    changeTextValue(\"new todo\");\n    changeDateValue(\"date.now\");\n  }\n\n  function deleteItem(id) {\n    const newList = list.filter(a => a.id !== id);\n    setList(newList);\n  }\n\n  function editItem(id, description) {\n    if (description) {\n      const newList = list.map(todo => {\n        if (todo.id === id) {\n          todo.description = description;\n        }\n\n        return todo;\n      });\n      setList(newList);\n      changeDescription(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Todo Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      value: textValue,\n      onChange: event => {\n        let value = event.target.value;\n        changeTextValue(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deaadline\",\n      children: \"Deadline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"deaadline\",\n      value: dateValue,\n      onChange: event => {\n        let value = event.target.value;\n        changeDateValue(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.length !== 0 ? list.map(taskTodo => editMode !== taskTodo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: \"solid\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          description: taskTodo.description,\n          deadline: taskTodo.deadline\n        }, taskTodo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(taskTodo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateEditMode(taskTodo.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, taskTodo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: \"solid\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newDescription,\n          onChange: event => {\n            let value = event.target.value;\n            changeDescription(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            editItem(taskTodo.id, newDescription);\n            updateEditMode(-1);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(taskTodo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, taskTodo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No todos left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTodo, \"ch38SaX8Mwf/wMjgxQFD3blNMIU=\");\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week3/todo-app/src/AddTodo.js"],"names":["React","useState","useEffect","getNextId","getTodos","Todo","AddTodo","list","setList","textValue","changeTextValue","dateValue","changeDateValue","editMode","updateEditMode","newDescription","changeDescription","then","data","nextId","newTodo","id","description","deadline","addItem","concat","deleteItem","newList","filter","a","editItem","map","todo","event","value","target","length","taskTodo","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getNextId, getTodos } from \"./TodosHelper\";\nimport Todo from \"./Todo\";\n\nconst AddTodo = function () {\n  const [list, setList] = useState([]);\n  const [textValue, changeTextValue] = useState(\"\");\n  const [dateValue, changeDateValue] = useState(\"\");\n  const [editMode, updateEditMode] = useState(-1);\n  const [newDescription, changeDescription] = useState(\"\");\n\n  useEffect(() => {\n    setList([]);\n    getTodos().then((data) => setList(data));\n  }, []);\n\n  const nextId = getNextId(list);\n  let newTodo = { id: nextId, description: textValue, deadline: dateValue };\n\n  function addItem() {\n    setList(list.concat(newTodo));\n    changeTextValue(\"new todo\");\n    changeDateValue(\"date.now\");\n  }\n  function deleteItem(id) {\n    const newList = list.filter((a) => a.id !== id);\n    setList(newList);\n  }\n  function editItem(id, description) {\n    if (description) {\n      const newList = list.map((todo) => {\n        if (todo.id === id) {\n          todo.description = description;\n        }\n        return todo;\n      });\n      setList(newList);\n      changeDescription(\"\");\n    }\n  }\n  return (\n    <div>\n      <label htmlFor=\"description\">Todo Description</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        value={textValue}\n        onChange={(event) => {\n          let value = event.target.value;\n          changeTextValue(value);\n        }}\n      /> <br/>\n\n      <label htmlFor=\"deaadline\">Deadline</label>\n      <input\n        type=\"date\"\n        id=\"deaadline\"\n        value={dateValue}\n        onChange={(event) => {\n          let value = event.target.value;\n          changeDateValue(value);\n        }}\n      /> <br/>\n      <button onClick={addItem}>Add Todo</button>\n      <ul>\n        {list.length !== 0 ? (\n          list.map((taskTodo) =>\n            editMode !== taskTodo.id ? (\n              <div key={taskTodo.id} style={{ borderStyle: \"solid\" }}>\n                <Todo\n                  key={taskTodo.id}\n                  description={taskTodo.description}\n                  deadline={taskTodo.deadline}\n                />\n                <button onClick={() => deleteItem(taskTodo.id)}>Delete</button>\n                <button onClick={() => updateEditMode(taskTodo.id)}>\n                  Edit\n                </button>\n              </div>\n            ) : (\n              <div key={taskTodo.id} style={{ borderStyle: \"solid\" }}>\n                <li />\n                <input\n                  type=\"text\"\n                  value={newDescription}\n                  onChange={(event) => {\n                    let value = event.target.value;\n                    changeDescription(value);\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    editItem(taskTodo.id, newDescription);\n                    updateEditMode(-1);\n                  }}\n                >\n                  Update\n                </button>\n                <button onClick={() => deleteItem(taskTodo.id)}>Delete</button>\n              </div>\n            )\n          )\n        ) : (\n          <h1>No todos left</h1>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddTodo;\n"]},"metadata":{},"sourceType":"module"}