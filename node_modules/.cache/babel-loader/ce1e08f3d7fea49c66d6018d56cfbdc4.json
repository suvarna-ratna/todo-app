{"ast":null,"code":"var _jsxFileName = \"/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week3/todo-app/src/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getNextId, getTodos } from './TodosHelper';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = function () {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [textValue, changeTextValue] = useState('');\n  const [dateValue, changeDateValue] = useState('');\n  const [editMode, updateEditMode] = useState(-1);\n  const [newDescription, changeDescription] = useState('');\n  useEffect(() => {\n    setList([]);\n    getTodos().then(data => setList(data));\n  }, []);\n  const nextId = getNextId(list);\n  let newTodo = {\n    id: nextId,\n    description: textValue,\n    deadline: dateValue\n  };\n\n  function addItem() {\n    setList(list.concat(newTodo));\n    changeTextValue('');\n    changeDateValue('');\n  }\n\n  function deleteItem(id) {\n    const newList = list.filter(a => a.id !== id);\n    setList(newList);\n  }\n\n  function editItem(id, description) {\n    if (description) {\n      const newList = list.map(todo => {\n        if (todo.id === id) {\n          todo.description = description;\n        }\n\n        return todo;\n      });\n      setList(newList);\n      changeDescription('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Todo Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      value: textValue,\n      onChange: event => {\n        let value = event.target.value;\n        changeTextValue(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deaadline\",\n      children: \"Deadline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: true,\n      value: dateValue,\n      onChange: event => {\n        let value = event.target.value;\n        changeDateValue(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.length !== 0 ? list.map(aTodo => editMode !== aTodo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: 'solid'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          description: aTodo.description,\n          deadline: aTodo.deadline\n        }, aTodo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(aTodo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateEditMode(aTodo.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, aTodo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: 'solid'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newDescription,\n          onChange: event => {\n            let value = event.target.value;\n            changeDescription(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            editItem(aTodo.id, newDescription);\n            updateEditMode(-1);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(aTodo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, aTodo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No todos left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"KWsP8qedVhf3JIEBnSPLh4gLoTg=\");\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week3/todo-app/src/AddTodo.js"],"names":["React","useState","useEffect","getNextId","getTodos","Todo","AddTodo","list","setList","textValue","changeTextValue","dateValue","changeDateValue","editMode","updateEditMode","newDescription","changeDescription","then","data","nextId","newTodo","id","description","deadline","addItem","concat","deleteItem","newList","filter","a","editItem","map","todo","event","value","target","length","aTodo","borderStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,eAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,eAAZ,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACU,SAAD,EAAYC,eAAZ,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACY,QAAD,EAAWC,cAAX,IAA6Bb,QAAQ,CAAC,CAAC,CAAF,CAA3C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,IAAAA,QAAQ,GAAGa,IAAX,CAAgBC,IAAI,IAAIV,OAAO,CAACU,IAAD,CAA/B;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,MAAM,GAAGhB,SAAS,CAACI,IAAD,CAAxB;AACA,MAAIa,OAAO,GAAG;AAAEC,IAAAA,EAAE,EAAEF,MAAN;AAAcG,IAAAA,WAAW,EAAEb,SAA3B;AAAsCc,IAAAA,QAAQ,EAAEZ;AAAhD,GAAd;;AAEA,WAASa,OAAT,GAAmB;AACfhB,IAAAA,OAAO,CAACD,IAAI,CAACkB,MAAL,CAAYL,OAAZ,CAAD,CAAP;AACAV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH;;AACD,WAASc,UAAT,CAAoBL,EAApB,EAAwB;AACpB,UAAMM,OAAO,GAAGpB,IAAI,CAACqB,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASA,EAA5B,CAAhB;AACAb,IAAAA,OAAO,CAACmB,OAAD,CAAP;AACH;;AACD,WAASG,QAAT,CAAkBT,EAAlB,EAAsBC,WAAtB,EAAmC;AAC/B,QAAIA,WAAJ,EAAiB;AACb,YAAMK,OAAO,GAAGpB,IAAI,CAACwB,GAAL,CAASC,IAAI,IAAI;AAC7B,YAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;AAChBW,UAAAA,IAAI,CAACV,WAAL,GAAmBA,WAAnB;AACH;;AAAC,eAAOU,IAAP;AACL,OAJe,CAAhB;AAKAxB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACAX,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ;;AACD,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,aAAtB;AAAoC,MAAA,KAAK,EAAEP,SAA3C;AAAsD,MAAA,QAAQ,EAAGwB,KAAD,IAAW;AACvE,YAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACAxB,QAAAA,eAAe,CAACwB,KAAD,CAAf;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,MAArB;AAAsB,MAAA,KAAK,EAAEvB,SAA7B;AAAwC,MAAA,QAAQ,EAAGsB,KAAD,IAAW;AACzD,YAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACAtB,QAAAA,eAAe,CAACsB,KAAD,CAAf;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAQ,MAAA,OAAO,EAAEV,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA,gBACKjB,IAAI,CAAC6B,MAAL,KAAgB,CAAhB,GAAoB7B,IAAI,CAACwB,GAAL,CAAUM,KAAD,IAC1BxB,QAAQ,KAAKwB,KAAK,CAAChB,EAAnB,gBAAyB;AAAoB,QAAA,KAAK,EAAE;AAAEiB,UAAAA,WAAW,EAAE;AAAf,SAA3B;AAAA,gCACrB,QAAC,IAAD;AAAqB,UAAA,WAAW,EAAED,KAAK,CAACf,WAAxC;AAAqD,UAAA,QAAQ,EAAEe,KAAK,CAACd;AAArE,WAAWc,KAAK,CAAChB,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADqB,eAErB;AAAQ,UAAA,OAAO,EAAE,MAAMK,UAAU,CAACW,KAAK,CAAChB,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFqB,eAGrB;AAAQ,UAAA,OAAO,EAAE,MAAMP,cAAc,CAACuB,KAAK,CAAChB,EAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHqB;AAAA,SAAUgB,KAAK,CAAChB,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAzB,gBAIK;AAAoB,QAAA,KAAK,EAAE;AAAEiB,UAAAA,WAAW,EAAE;AAAf,SAA3B;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA,gBADH,eACS;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEvB,cAA1B;AAA0C,UAAA,QAAQ,EAAGkB,KAAD,IAAW;AACjE,gBAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACAlB,YAAAA,iBAAiB,CAACkB,KAAD,CAAjB;AACH;AAHK;AAAA;AAAA;AAAA;AAAA,gBADT,eAIQ;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEJ,YAAAA,QAAQ,CAACO,KAAK,CAAChB,EAAP,EAAWN,cAAX,CAAR;AAAoCD,YAAAA,cAAc,CAAC,CAAC,CAAF,CAAd;AAAoB,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,eAKG;AAAQ,UAAA,OAAO,EAAE,MAAMY,UAAU,CAACW,KAAK,CAAChB,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA,SAAUgB,KAAK,CAAChB,EAAhB;AAAA;AAAA;AAAA;AAAA,cALY,CAApB,gBAYY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbjB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CApED;;GAAMf,O;;KAAAA,O;AAsEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getNextId, getTodos } from './TodosHelper';\nimport Todo from './Todo';\n\nconst AddTodo = function () {\n\n    const [list, setList] = useState([]);\n    const [textValue, changeTextValue] = useState('');\n    const [dateValue, changeDateValue] = useState('');\n    const [editMode, updateEditMode] = useState(-1)\n    const [newDescription, changeDescription] = useState('');\n\n    useEffect(() => {\n        setList([]);\n        getTodos().then(data => setList(data));\n    }, []);\n\n    const nextId = getNextId(list);\n    let newTodo = { id: nextId, description: textValue, deadline: dateValue };\n\n    function addItem() {\n        setList(list.concat(newTodo));\n        changeTextValue('');\n        changeDateValue('');\n    }\n    function deleteItem(id) {\n        const newList = list.filter((a) => a.id !== id);\n        setList(newList);\n    }\n    function editItem(id, description) {\n        if (description) {\n            const newList = list.map(todo => {\n                if (todo.id === id) {\n                    todo.description = description;\n                } return todo\n            })\n            setList(newList);\n            changeDescription('');\n        }\n    }\n    return (\n        <div>\n            <label htmlFor=\"description\">Todo Description</label>\n            <input type=\"text\" id=\"description\" value={textValue} onChange={(event) => {\n                let value = event.target.value\n                changeTextValue(value);\n            }} />\n            \n            <label htmlFor=\"deaadline\">Deadline</label>\n            <input type=\"date\" id value={dateValue} onChange={(event) => {\n                let value = event.target.value\n                changeDateValue(value);\n            }} />\n            <button onClick={addItem}>Add Todo</button>\n            <ul>\n                {list.length !== 0 ? list.map((aTodo) =>\n                    editMode !== aTodo.id ? (<div key={aTodo.id} style={{ borderStyle: 'solid' }}>\n                        <Todo key={aTodo.id} description={aTodo.description} deadline={aTodo.deadline} />\n                        <button onClick={() => deleteItem(aTodo.id)}>Delete</button>\n                        <button onClick={() => updateEditMode(aTodo.id)}>Edit</button></div>) :\n                        (<div key={aTodo.id} style={{ borderStyle: 'solid' }}>\n                            <li /><input type=\"text\" value={newDescription} onChange={(event) => {\n                                let value = event.target.value\n                                changeDescription(value);\n                            }} /><button onClick={() => { editItem(aTodo.id, newDescription); updateEditMode(-1) }}>Update</button>\n                            <button onClick={() => deleteItem(aTodo.id)}>Delete</button></div>\n\n                        )) : <h1>No todos left</h1>}\n            </ul>\n        </div>\n    );\n\n}\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}